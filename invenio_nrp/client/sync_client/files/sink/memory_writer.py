#
# This file was generated from the asynchronous client at files/sink/memory.py by generate_synchronous_client.sh
# Do not edit this file directly, instead edit the original file and regenerate this file.
#


"""Implementation of a sink that writes data to memory."""
import contextlib
from io import IOBase
from typing import Iterator

from ..os import DataWriter
from .base import DataSink, SinkState


class MemoryWriter(IOBase):
    """Implementation of a writer that writes data to memory."""

    def __init__(self, buffer: bytearray, offset: int):
        """Initialize the writer.

        :param buffer: The buffer where the data will be written.
        :param offset: The offset in bytes from the start of the buffer.
        """
        self._buffer = buffer
        self._offset = offset

    def write(self, b: bytes) -> int:
        """Write data to the buffer.

        :param b: the bytes to be written
        :return:  number of bytes written
        """
        self._buffer[self._offset : self._offset + len(b)] = b
        self._offset += len(b)
        return len(b)

    def close(self):
        pass
